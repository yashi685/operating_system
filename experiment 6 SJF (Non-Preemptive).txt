import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;

class Process {
    int id;
    int burstTime;
    int waitingTime;
    int turnaroundTime;
    int completionTime;

    public Process(int id, int burstTime) {
        this.id = id;
        this.burstTime = burstTime;
    }
}

public class SJFNonPreemptive {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input number of processes
        System.out.print("Enter the number of processes: ");
        int n = scanner.nextInt();

        ArrayList<Process> processes = new ArrayList<>();

        // Input burst time for each process
        for (int i = 0; i < n; i++) {
            System.out.print("Enter burst time for Process " + (i + 1) + ": ");
            int burstTime = scanner.nextInt();
            processes.add(new Process(i + 1, burstTime));
        }

        // Sort processes by burst time (Shortest Job First)
        Collections.sort(processes, Comparator.comparingInt(p -> p.burstTime));

        // Calculate waiting time, turnaround time, and completion time for each process
        int currentTime = 0;
        for (Process process : processes) {
            process.waitingTime = currentTime;
            process.turnaroundTime = process.waitingTime + process.burstTime;
            process.completionTime = currentTime + process.burstTime;
            currentTime += process.burstTime;
        }

        // Display results
        System.out.println("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\tCompletion Time");
        for (Process process : processes) {
            System.out.println("P" + process.id + "\t\t" + process.burstTime + "\t\t" +
                    process.waitingTime + "\t\t" + process.turnaroundTime + "\t\t" + process.completionTime);
        }

        // Calculate average waiting time and turnaround time
        double totalWaitingTime = 0;
        double totalTurnaroundTime = 0;
        for (Process process : processes) {
            totalWaitingTime += process.waitingTime;
            totalTurnaroundTime += process.turnaroundTime;
        }

        System.out.println("\nAverage Waiting Time: " + (totalWaitingTime / n));
        System.out.println("Average Turnaround Time: " + (totalTurnaroundTime / n));

        scanner.close();
    }
}
